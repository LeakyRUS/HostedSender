name: "HostedSender build"
on:
  pull_request:
    branches: [ "master" ]
  push:
    branches:
      - 'master'
    tags:
      - '*.*.*'

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Set up dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'
          source-url: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
        env:
          NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}

      - name: Build
        run: cd Hosted.Windows; dotnet publish -c Release -p:PublishProfile=FolderProfile -o ../publish

      - name: Build Autonomous
        run: cd Hosted.Windows; dotnet publish -c Release -p:PublishProfile=FolderProfile1 -o ../publishAutonomous

      - name: Save version
        run: |
          [xml]$csproj = Get-Content -Path ./Hosted.Windows/Hosted.Windows.csproj
          $version = $csproj.Project.PropertyGroup.Version
          Write-Output "Version: $version"
          $version | Set-Content version.txt

      - name: Compress the builds
        run: |
          $directories = @("publish", "publishAutonomous")
          foreach ($dir in $directories) {
          $zipPath = "$dir.zip"
          Compress-Archive -Path $dir -DestinationPath $zipPath -Force
          Write-Output "Created archive: $zipPath"
          }

      - name: Publish artifacts
        uses: actions/upload-artifact@v4
        with:
          name: hostedsender-build
          path: |
            *.zip 
            CHANGELOG.md
            version.txt

  publish:
    runs-on: ubuntu-latest
    needs: build
    if: ( github.ref == 'refs/heads/master' ) || startsWith(github.ref, 'refs/tags/') 
    permissions:
      contents: write
    steps:
      - name: Pull artifacts
        uses: actions/download-artifact@v4
        with:
          name: hostedsender-build

      - name: Extract version
        run: echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          body_path: CHANGELOG.md
          name: "${{ env.VERSION }}"
          tag_name: "${{ env.VERSION }}"
          make_latest: true
          files: |
            publish.zip
            publishAutonomous.zip


